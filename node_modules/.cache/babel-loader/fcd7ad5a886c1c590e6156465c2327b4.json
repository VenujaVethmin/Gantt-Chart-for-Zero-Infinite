{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-gantt-demo\\\\src\\\\components\\\\Gantt\\\\Gantt.js\";\nimport React, { Component } from 'react';\nimport { gantt } from 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Gantt extends Component {\n  constructor() {\n    super(...arguments);\n    this.dataProcessor = null;\n  }\n\n  initZoom() {\n    gantt.ext.zoom.init({\n      levels: [{\n        name: 'Hours',\n        scale_height: 60,\n        min_column_width: 30,\n        scales: [{\n          unit: 'day',\n          step: 1,\n          format: '%d %M'\n        }, {\n          unit: 'hour',\n          step: 1,\n          format: '%H'\n        }]\n      }, {\n        name: 'Days',\n        scale_height: 60,\n        min_column_width: 70,\n        scales: [{\n          unit: 'week',\n          step: 1,\n          format: 'Week #%W'\n        }, {\n          unit: 'day',\n          step: 1,\n          format: '%d %M'\n        }]\n      }, {\n        name: 'Months',\n        scale_height: 60,\n        min_column_width: 70,\n        scales: [{\n          unit: \"month\",\n          step: 1,\n          format: '%F'\n        }, {\n          unit: 'week',\n          step: 1,\n          format: '#%W'\n        }]\n      }]\n    });\n  }\n\n  setZoom(value) {\n    if (!gantt.ext.zoom.getLevels()) {\n      this.initZoom();\n    }\n\n    gantt.ext.zoom.setLevel(value);\n  }\n\n  initGanttDataProcessor() {\n    /**\r\n     * type: \"task\"|\"link\"\r\n     * action: \"create\"|\"update\"|\"delete\"\r\n     * item: data object object\r\n     */\n    const onDataUpdated = this.props.onDataUpdated;\n    this.dataProcessor = gantt.createDataProcessor((type, action, item, id) => {\n      return new Promise((resolve, reject) => {\n        if (onDataUpdated) {\n          onDataUpdated(type, action, item, id);\n        } // if onDataUpdated changes returns a permanent id of the created item, you can return it from here so dhtmlxGantt could apply it\n        // resolve({id: databaseId});\n\n\n        return resolve();\n      });\n    });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.zoom !== nextProps.zoom;\n  }\n\n  componentDidMount() {\n    gantt.config.date_format = \"%Y-%m-%d %H:%i\";\n    const {\n      tasks\n    } = this.props;\n    gantt.init(this.ganttContainer);\n    this.initGanttDataProcessor();\n    gantt.parse(tasks);\n  }\n\n  componentWillUnmount() {\n    if (this.dataProcessor) {\n      this.dataProcessor.destructor();\n      this.dataProcessor = null;\n    }\n  }\n\n  render() {\n    const {\n      zoom\n    } = this.props;\n    this.setZoom(zoom);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: input => {\n        this.ganttContainer = input;\n      },\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["E:/react-gantt-demo/src/components/Gantt/Gantt.js"],"names":["React","Component","gantt","Gantt","dataProcessor","initZoom","ext","zoom","init","levels","name","scale_height","min_column_width","scales","unit","step","format","setZoom","value","getLevels","setLevel","initGanttDataProcessor","onDataUpdated","props","createDataProcessor","type","action","item","id","Promise","resolve","reject","shouldComponentUpdate","nextProps","componentDidMount","config","date_format","tasks","ganttContainer","parse","componentWillUnmount","destructor","render","input","width","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { gantt } from 'dhtmlx-gantt';\r\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\r\n\r\nexport default class Gantt extends Component {\r\n\r\n  // instance of gantt.dataProcessor\r\n  dataProcessor = null;\r\n\r\n  initZoom() {\r\n    gantt.ext.zoom.init({\r\n      levels: [\r\n        {\r\n          name: 'Hours',\r\n          scale_height: 60,\r\n          min_column_width: 30,\r\n          scales: [\r\n            { unit: 'day', step: 1, format: '%d %M' },\r\n            { unit: 'hour', step: 1, format: '%H' }\r\n          ]\r\n        },\r\n        {\r\n          name: 'Days',\r\n          scale_height: 60,\r\n          min_column_width: 70,\r\n          scales: [\r\n            { unit: 'week', step: 1, format: 'Week #%W' },\r\n            { unit: 'day', step: 1, format: '%d %M' }\r\n          ]\r\n        },\r\n        {\r\n          name: 'Months',\r\n          scale_height: 60,\r\n          min_column_width: 70,\r\n          scales: [\r\n            { unit: \"month\", step: 1, format: '%F' },\r\n            { unit: 'week', step: 1, format: '#%W' }\r\n          ]\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  setZoom(value) {\r\n    if(!gantt.ext.zoom.getLevels()){\r\n      this.initZoom();\r\n    }\r\n    gantt.ext.zoom.setLevel(value);\r\n  }\r\n\r\n  initGanttDataProcessor() {\r\n    /**\r\n     * type: \"task\"|\"link\"\r\n     * action: \"create\"|\"update\"|\"delete\"\r\n     * item: data object object\r\n     */\r\n    const onDataUpdated = this.props.onDataUpdated;\r\n    this.dataProcessor = gantt.createDataProcessor((type, action, item, id) => {\r\n      return new Promise((resolve, reject) => {\r\n        if (onDataUpdated) {\r\n          onDataUpdated(type, action, item, id);\r\n        }\r\n\r\n        // if onDataUpdated changes returns a permanent id of the created item, you can return it from here so dhtmlxGantt could apply it\r\n        // resolve({id: databaseId});\r\n        return resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    return this.props.zoom !== nextProps.zoom;\r\n  }\r\n\r\n  componentDidMount() {\r\n    gantt.config.date_format = \"%Y-%m-%d %H:%i\";\r\n    const { tasks } = this.props;\r\n    gantt.init(this.ganttContainer);\r\n    this.initGanttDataProcessor();\r\n    gantt.parse(tasks);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.dataProcessor) {\r\n      this.dataProcessor.destructor();\r\n      this.dataProcessor = null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { zoom } = this.props;\r\n    this.setZoom(zoom);\r\n    return (\r\n      <div\r\n        ref={(input) => { this.ganttContainer = input }}\r\n        style={{ width: '100%', height: '100%' }}\r\n      ></div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}